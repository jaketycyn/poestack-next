import React from "react";
import { ChevronDownIcon, ChevronUpIcon } from "@heroicons/react/20/solid";

/**
 * The values used to represent the direction a column
 * is being sorted in.
 */
export type SortingDirections = "none" | "asc" | "desc";

/**
 * Props for {@link SortableTableHeader}
 */
export type SortableTableHeaderProps = {
  columns: SortableTableColumns;
  columnDirections: ColumnsSortingMap;
  onSortChange: (column: string) => void;
};

/**
 * A `Column` represents a key, text pair where:
 *
 * `key` will be passed to the {@link useSortTh}'s
 * onSortChange callback when the header is clicked.
 *
 * `text` is displayed as the text in the column cell.
 *
 * The `notSortable` flag is used to turn off
 * any sorting behavior for a particular column header.
 */
type Column = {
  key: string;
  text: string;
  notSortable?: boolean;
};

/**
 * An array of {@link Column key, text } pairs
 * that represent the text printed to the ui
 * and the key provided to the sorting function.
 *
 * {@link Column notSortable} can be used to turn
 * off any sorting behavior on a specific column.
 */
export type SortableTableColumns = Array<Column>;

/**
 * A mapping of the {@link SortableTableColumns} key fields
 * to a {@link SortingDirections} value.  This will
 * be generated by the {@link useSortTh} hook.
 */
export type ColumnsSortingMap = {
  [key: string]: SortingDirections;
};

/**
 * A component that creates a `<thead>` element with
 * sort by click interface functionality.
 *
 * This is expected to be used in conjunection with
 * the {@link useSortTh} hook to implement the
 * required logic.
 */
export default function SortableTableHeader({
  columns,
  onSortChange,
  columnDirections,
}: SortableTableHeaderProps) {
  function onColumnHeaderClick(column: string) {
    onSortChange(column);
  }

  return (
    <thead className="bg-surface-primary-variant border border-slate-800 ">
      <tr>
        {columns.map((column) => (
          <th className="pl-2 " key={column.key}>
            <button
              className="flex flex-row justify-center w-full "
              onClick={(e) => {
                onColumnHeaderClick(column.key);
              }}
              disabled={column.notSortable}
            >
              {column.text}
              <OrderIndicatorIcon direction={columnDirections[column.key]} />
            </button>
          </th>
        ))}
      </tr>
    </thead>
  );
}

/**
 * Internal function that chooses which icon to use
 * base on a given sorting direction.  See {@link SortableTableHeader}
 */
function OrderIndicatorIcon({ direction }: { direction: SortingDirections }) {
  return direction === "desc" ? (
    <ChevronDownIcon
      className="w-5 h-5 ml-2 -mr-1 text-violet-200 hover:text-violet-100"
      aria-hidden="true"
    />
  ) : direction === "asc" ? (
    <ChevronUpIcon
      className="w-5 h-5 ml-2 -mr-1 text-violet-200 hover:text-violet-100"
      aria-hidden="true"
    />
  ) : (
    <div
      className="w-5 h-5 ml-2 -mr-1 text-violet-200"
      aria-hidden="true"
    ></div>
  );
}
